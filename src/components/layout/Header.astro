---
// Header.astro
// Este componente proporciona navegación consistente entre las diferentes páginas del portafolio

// Puedes personalizar estos datos según tus necesidades
const navigation = [
  { name: "Sobre mí", href: "/about" },
  { name: "Proyectos", href: "/projects" },
  { name: "Blog", href: "/blog" },
  { name: "Contacto", href: "/contact" },
];

// Determina la página actual para resaltarla en la navegación
const currentPath = Astro.url.pathname;

// Propiedades configurables
const isTransparent = Astro.props.transparent || false;
---

<header 
  class={`w-full fixed top-0 left-0 z-50 transition-all duration-300 ${
    isTransparent 
      ? 'bg-transparent py-6' 
      : 'bg-white/90 dark:bg-slate-900/90 backdrop-blur-sm py-4 shadow-sm'
  }`}
  id="main-header"
>
  <div class="container mx-auto px-4 flex items-center justify-between">
    <!-- Logo -->
    <a href="/" class="relative group">
      <div class="absolute -inset-1 bg-gradient-to-r from-indigo-600 to-purple-600 rounded-full opacity-0 group-hover:opacity-100 blur transition duration-200"></div>
      <div class="relative flex items-center">
        <!-- Puedes reemplazar esto con tu logo SVG real -->
        <div class="h-10 w-10 bg-indigo-600 text-white rounded-full flex items-center justify-center font-bold text-xl">
          TN
        </div>
        <span class="ml-3 text-lg font-bold text-slate-800 dark:text-white">Tu Nombre</span>
      </div>
    </a>

    <!-- Navegación para pantallas medianas y grandes -->
    <nav class="hidden md:flex items-center space-x-1">
      {navigation.map(item => (
        <a
          href={item.href}
          class={`px-4 py-2 rounded-lg text-sm font-medium transition-all duration-200 ${
            currentPath === item.href
              ? 'text-indigo-600 dark:text-indigo-400 bg-indigo-50 dark:bg-indigo-900/30'
              : 'text-slate-600 hover:text-indigo-600 dark:text-slate-300 dark:hover:text-white hover:bg-slate-100 dark:hover:bg-slate-800'
          }`}
        >
          {item.name}
        </a>
      ))}
      
      <!-- Botón de cambio de tema (opcional) -->
      <button 
        id="theme-toggle" 
        class="ml-2 p-2 rounded-lg text-slate-600 hover:text-indigo-600 dark:text-slate-300 dark:hover:text-white hover:bg-slate-100 dark:hover:bg-slate-800 transition-all"
        aria-label="Cambiar tema"
      >
        <span class="dark:hidden">🌙</span>
        <span class="hidden dark:block">☀️</span>
      </button>
    </nav>

    <!-- Botón de menú móvil -->
    <button 
      id="mobile-menu-button" 
      class="md:hidden p-2 rounded-lg text-slate-600 hover:text-indigo-600 dark:text-slate-300 dark:hover:text-white hover:bg-slate-100 dark:hover:bg-slate-800 transition-all"
      aria-label="Abrir menú"
    >
      <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
        <path stroke-linecap="round" stroke-linejoin="round" d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5" />
      </svg>
    </button>
  </div>

  <!-- Menú móvil desplegable -->
  <div 
    id="mobile-menu" 
    class="md:hidden fixed inset-0 bg-white dark:bg-slate-900 z-50 flex flex-col pt-24 px-6 transform transition-transform duration-300 translate-y-full"
  >
    <button 
      id="close-mobile-menu" 
      class="absolute top-6 right-6 p-2 rounded-lg text-slate-600 hover:text-indigo-600 dark:text-slate-300 dark:hover:text-white hover:bg-slate-100 dark:hover:bg-slate-800 transition-all"
      aria-label="Cerrar menú"
    >
      <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
        <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
      </svg>
    </button>
    
    <nav class="flex flex-col space-y-2">
      {navigation.map(item => (
        <a
          href={item.href}
          class={`px-4 py-3 rounded-lg text-lg font-medium transition-all duration-200 ${
            currentPath === item.href
              ? 'text-indigo-600 dark:text-indigo-400 bg-indigo-50 dark:bg-indigo-900/30'
              : 'text-slate-600 hover:text-indigo-600 dark:text-slate-300 dark:hover:text-white hover:bg-slate-100 dark:hover:bg-slate-800'
          }`}
        >
          {item.name}
        </a>
      ))}
    </nav>
    
    <!-- Cambio de tema en móvil -->
    <button 
      id="theme-toggle-mobile" 
      class="mt-8 flex items-center px-4 py-3 rounded-lg text-slate-600 hover:text-indigo-600 dark:text-slate-300 dark:hover:text-white hover:bg-slate-100 dark:hover:bg-slate-800 transition-all"
    >
      <span class="mr-3 dark:hidden">🌙</span>
      <span class="mr-3 hidden dark:block">☀️</span>
      <span class="text-lg font-medium dark:hidden">Modo oscuro</span>
      <span class="text-lg font-medium hidden dark:block">Modo claro</span>
    </button>
    
    <!-- Enlaces sociales en móvil -->
    <div class="mt-auto mb-8">
      <p class="text-sm text-slate-500 dark:text-slate-400 mb-4">Sígueme en:</p>
      <div class="flex space-x-4">
        <a href="#" class="h-10 w-10 rounded-full bg-slate-200 dark:bg-slate-700 flex items-center justify-center text-slate-700 dark:text-slate-300 hover:bg-indigo-600 hover:text-white transition-all">
          <span>🐙</span>
        </a>
        <a href="#" class="h-10 w-10 rounded-full bg-slate-200 dark:bg-slate-700 flex items-center justify-center text-slate-700 dark:text-slate-300 hover:bg-indigo-600 hover:text-white transition-all">
          <span>💼</span>
        </a>
        <a href="#" class="h-10 w-10 rounded-full bg-slate-200 dark:bg-slate-700 flex items-center justify-center text-slate-700 dark:text-slate-300 hover:bg-indigo-600 hover:text-white transition-all">
          <span>🐦</span>
        </a>
        <a href="#" class="h-10 w-10 rounded-full bg-slate-200 dark:bg-slate-700 flex items-center justify-center text-slate-700 dark:text-slate-300 hover:bg-indigo-600 hover:text-white transition-all">
          <span>📸</span>
        </a>
      </div>
    </div>
  </div>
</header>

<script>
  // Controla el comportamiento del menú móvil y cambios de tema
  document.addEventListener('DOMContentLoaded', () => {
    const header = document.getElementById('main-header');
    const mobileMenu = document.getElementById('mobile-menu');
    const mobileMenuButton = document.getElementById('mobile-menu-button');
    const closeMenuButton = document.getElementById('close-mobile-menu');
    const themeToggle = document.getElementById('theme-toggle');
    const themeToggleMobile = document.getElementById('theme-toggle-mobile');

    // Cambiar estilo de header al hacer scroll (si es transparente)
    if (header.classList.contains('bg-transparent')) {
      window.addEventListener('scroll', () => {
        if (window.scrollY > 10) {
          header.classList.remove('bg-transparent', 'py-6');
          header.classList.add('bg-white/90', 'dark:bg-slate-900/90', 'backdrop-blur-sm', 'py-4', 'shadow-sm');
        } else {
          header.classList.add('bg-transparent', 'py-6');
          header.classList.remove('bg-white/90', 'dark:bg-slate-900/90', 'backdrop-blur-sm', 'py-4', 'shadow-sm');
        }
      });
    }

    // Control del menú móvil
    mobileMenuButton?.addEventListener('click', () => {
      mobileMenu?.classList.remove('translate-y-full');
    });

    closeMenuButton?.addEventListener('click', () => {
      mobileMenu?.classList.add('translate-y-full');
    });

    // Cerrar menú móvil al hacer clic en un enlace
    const mobileLinks = mobileMenu?.querySelectorAll('a');
    mobileLinks?.forEach(link => {
      link.addEventListener('click', () => {
        mobileMenu.classList.add('translate-y-full');
      });
    });

    // Cambio de tema (si decides implementarlo)
    const toggleTheme = () => {
      document.documentElement.classList.toggle('dark');
      
      // Opcional: guardar preferencia en localStorage
      if (document.documentElement.classList.contains('dark')) {
        localStorage.setItem('theme', 'dark');
      } else {
        localStorage.setItem('theme', 'light');
      }
    };

    themeToggle?.addEventListener('click', toggleTheme);
    themeToggleMobile?.addEventListener('click', toggleTheme);
    
    // Cargar tema preferido al inicio
    if (localStorage.getItem('theme') === 'dark' || 
        (!localStorage.getItem('theme') && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
      document.documentElement.classList.add('dark');
    } else {
      document.documentElement.classList.remove('dark');
    }
  });
</script>
