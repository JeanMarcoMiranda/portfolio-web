---
import { getCollection, getEntry } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import { Icon } from 'astro-icon/components';

// Obtener todos los posts para generar rutas estáticas
export async function getStaticPaths() {
  const posts = await getCollection('blog');
  return posts.map((post) => ({
    params: { slug: post.slug },
  }));
}

// Obtener el slug de la URL
const { slug } = Astro.params;

// Obtener el post correspondiente
const post = await getEntry('blog', slug);

// Manejar 404 si el post no existe
if (!post) {
  return Astro.redirect('/404');
}

// Obtener todos los posts para sugerencias relacionadas
const allPosts = await getCollection('blog');
const relatedPosts = allPosts
  .filter((p) => p.slug !== slug && p.data.tags.some((tag) => post.data.tags.includes(tag)))
  .sort((a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime())
  .slice(0, 3);

// Renderizar el contenido del post
const { Content } = await post.render();
---

<Layout
  title={`${post.data.title} - Mi Portafolio`}
  description={post.data.description}
>
  <section
    id="post"
    class="py-16 md:py-24 bg-gradient-to-b from-slate-50 to-white dark:from-slate-900 dark:to-slate-800 relative overflow-hidden"
    aria-labelledby="post-title"
  >
    <!-- Fondo decorativo -->
    <div class="absolute inset-0 pointer-events-none">
      <div
        class="absolute top-20 left-10 w-64 h-64 bg-indigo-500 opacity-10 rounded-full blur-2xl"
      ></div>
      <div
        class="absolute bottom-10 right-10 w-64 h-64 bg-purple-500 opacity-10 rounded-full blur-2xl"
      ></div>
      <div
        class="absolute inset-0 bg-grid-slate-200/20 dark:bg-grid-slate-700/20 [mask-image:radial-gradient(white,transparent_85%)]"
      ></div>
    </div>

    <div class="container mx-auto px-4 sm:px-6 lg:px-8 max-w-4xl relative z-10">
      <!-- Header -->
      <div
        class="flex flex-col items-center mb-12 opacity-0 translate-y-4 animate-on-scroll"
        id="post-header"
      >
        <h1
          id="post-title"
          class="text-3xl sm:text-4xl font-bold text-slate-800 dark:text-white mb-4 text-center"
        >
          {post.data.title}
        </h1>
        <div class="flex items-center text-sm text-slate-500 dark:text-slate-400 mb-4">
          <Icon name="mdi:calendar" class="w-4 h-4 mr-2" />
          <time datetime={post.data.date.toISOString()}>
            {new Date(post.data.date).toLocaleDateString('es-ES', {
              year: 'numeric',
              month: 'long',
              day: 'numeric',
            })}
          </time>
        </div>
        <div class="flex flex-wrap gap-2 justify-center">
          {post.data.tags.map((tag) => (
            <span
              class="inline-block px-2 py-1 bg-indigo-100 dark:bg-indigo-900/30 text-indigo-600 dark:text-indigo-300 text-xs font-medium rounded-full"
            >
              {tag}
            </span>
          ))}
        </div>
      </div>

      <!-- Contenido del post -->
      <article
        class="prose prose-slate dark:prose-invert max-w-none bg-white dark:bg-slate-800 rounded-xl shadow-lg p-6 sm:p-8 opacity-0 translate-y-4 animate-on-scroll"
        style="transition-delay: 200ms;"
      >
        <Content />
      </article>

      <!-- Posts relacionados -->
      {relatedPosts.length > 0 && (
        <div
          class="mt-12 opacity-0 translate-y-4 animate-on-scroll"
          style="transition-delay: 400ms;"
        >
          <h2
            class="text-2xl font-bold text-slate-800 dark:text-white mb-6"
          >
            Posts Relacionados
          </h2>
          <div class="grid grid-cols-1 sm:grid-cols-2 gap-6">
            {relatedPosts.map((relatedPost) => (
              <a
                href={`/blog/${relatedPost.slug}`}
                class="bg-white dark:bg-slate-800 rounded-xl shadow-lg p-6 group relative overflow-hidden hover:scale-105 transition-all duration-300"
                aria-label={`Leer ${relatedPost.data.title}`}
              >
                <div
                  class="absolute inset-0 bg-gradient-to-r from-indigo-500 to-purple-600 opacity-0 group-hover:opacity-10 transition-opacity duration-300 rounded-xl blur-xl"
                ></div>
                <h3
                  class="text-lg font-bold text-slate-800 dark:text-white mb-2 group-hover:text-indigo-600 dark:group-hover:text-indigo-400 transition-colors"
                >
                  {relatedPost.data.title}
                </h3>
                <p
                  class="text-sm text-slate-600 dark:text-slate-200 mb-4 line-clamp-2"
                >
                  {relatedPost.data.description}
                </p>
                <div
                  class="flex items-center text-sm text-slate-500 dark:text-slate-400"
                >
                  <Icon name="mdi:calendar" class="w-4 h-4 mr-2" />
                  <time datetime={relatedPost.data.date.toISOString()}>
                    {new Date(relatedPost.data.date).toLocaleDateString('es-ES', {
                      year: 'numeric',
                      month: 'long',
                      day: 'numeric',
                    })}
                  </time>
                </div>
              </a>
            ))}
          </div>
        </div>
      )}
    </div>
  </section>
</Layout>

<style>
  /* Patrón de fondo */
  .bg-grid-slate-200\/20 {
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='40' height='40' viewBox='0 0 40 40'%3E%3Cg fill-rule='evenodd'%3E%3Cg fill='%23CBD5E1' fill-opacity='0.2'%3E%3Cpath d='M0 38.59l2.83-2.83 1.41 1.41L1.41 40H0v-1.41zM0 1.4l2.83 2.83 1.41-1.41L1.41 0H0v1.41zM38.59 40l-2.83-2.83 1.41-1.41L40 38.59V40h-1.41zM40 1.41l-2.83 2.83-1.41-1.41L38.59 0H40v1.41zM20 18.6l2.83-2.83 1.41 1.41L21.41 20l2.83 2.83-1.41 1.41L20 21.41l-2.83 2.83-1.41-1.41L18.59 20l-2.83-2.83 1.41-1.41L20 18.59z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E");
  }

  .bg-grid-slate-700\/20 {
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='40' height='40' viewBox='0 0 40 40'%3E%3Cg fill-rule='evenodd'%3E%3Cg fill='%23334155' fill-opacity='0.2'%3E%3Cpath d='M0 38.59l2.83-2.83 1.41 1.41L1.41 40H0v-1.41zM0 1.4l2.83 2.83 1.41-1.41L1.41 0H0v1.41zM38.59 40l-2.83-2.83 1.41-1.41L40 38.59V40h-1.41zM40 1.41l-2.83 2.83-1.41-1.41L38.59 0H40v1.41zM20 18.6l2.83-2.83 1.41 1.41L21.41 20l2.83 2.83-1.41 1.41L20 21.41l-2.83 2.83-1.41-1.41L18.59 20l-2.83-2.83 1.41-1.41L20 18.59z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E");
  }

  /* Estilos para enfoque */
  a:focus {
    outline: 2px solid #4f46e5;
    outline-offset: 2px;
  }

  /* Estilos para prose */
  .prose {
    font-size: 1.125rem;
  }

  .prose h2 {
    font-size: 1.5rem;
    margin-top: 2rem;
    margin-bottom: 1rem;
  }

  .prose p {
    margin-bottom: 1.25rem;
  }

  .prose a {
    color: #4f46e5;
    text-decoration: underline;
    transition: color 0.2s;
  }

  .prose a:hover {
    color: #7c3aed;
  }

  .dark .prose a {
    color: #a5b4fc;
  }

  .dark .prose a:hover {
    color: #c4b5fd;
  }

  /* Truncar descripción */
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry, index) => {
          if (entry.isIntersecting) {
            setTimeout(() => {
              entry.target.classList.remove('opacity-0', 'translate-y-4');
            }, index * 100);
            observer.unobserve(entry.target);
          }
        });
      },
      { threshold: 0.1 }
    );

    document.querySelectorAll('.animate-on-scroll').forEach((el) => {
      observer.observe(el);
    });
  });
</script>
